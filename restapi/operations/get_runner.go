// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetRunnerHandlerFunc turns a function with the right signature into a get runner handler
type GetRunnerHandlerFunc func(GetRunnerParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetRunnerHandlerFunc) Handle(params GetRunnerParams) middleware.Responder {
	return fn(params)
}

// GetRunnerHandler interface for that can handle valid get runner params
type GetRunnerHandler interface {
	Handle(GetRunnerParams) middleware.Responder
}

// NewGetRunner creates a new http.Handler for the get runner operation
func NewGetRunner(ctx *middleware.Context, handler GetRunnerHandler) *GetRunner {
	return &GetRunner{Context: ctx, Handler: handler}
}

/*
	GetRunner swagger:route GET /runner getRunner

GetRunner get runner API
*/
type GetRunner struct {
	Context *middleware.Context
	Handler GetRunnerHandler
}

func (o *GetRunner) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetRunnerParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
